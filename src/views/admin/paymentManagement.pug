extends ../layout

block content
  include ../partial/adminPanel
  .container-xxl.py-2.mt-4
    .container
      .row.g-4.wow.fadeInUp(data-wow-delay='0.5s ')
        h2 #{t('admin-payment.management')}
        .admin-container
          .create-btn
            button(onclick="showCreateForm()") #{t('admin.create')}
          center
            table.admin-table
              thead
                tr
                  th #{t('admin-payment.#')}
                  th #{t('admin-payment.ID')}
                  th #{t('admin-payment.user')}
                  th #{t('admin-payment.course')}
                  th #{t('admin-payment.amount')}
                  th #{t('admin-payment.payment-date')}
                  th #{t('admin-payment.status')}
                  th #{t('admin.edit')}
                  th #{t('admin.delete')}
              tbody
                each payment, index in payments
                  tr(id=`courseRow-${payment.id}`)
                    td #{index + 1}
                    td #{payment.user}
                    td #{payment.course}
                    td #{payment.amount}$
                    td #{payment.payment_date}
                    td #{payment.status}
                    td 
                      .edit-btn
                        button(onclick=`showEditForm('${payment.id}', '${payment.user}', '${payment.course}', '${payment.amount}', '${payment.payment_date}', '${payment.status}')`) #{t('admin.edit')}
                    td 
                      .delete-btn
                        button(onclick=`showDeleteForm(${payment.id})`) #{t('admin.delete')}
  <!-- Create Form start -->
    #createModal.hidden
      .modal-content-admin
        h3 #{t('admin.create')}
        form(action="/admin/payments/create" method="POST")
          .form-group
            label(for="user") #{t('admin-payment.user')}
            input(type="text" name="user" id="user" required)
          .form-group
            label(for="course") #{t('admin-payment.course')}
            input(type="text" name="course" id="course" required)
          .form-group
            label(for="amount") #{t('admin-payment.amount')}
            input(type="number" name="amount" id="amount" required)
          .form-group
            label(for="payment-date") #{t('admin-payment.payment-date')}
            input(type="date" name="payment-date" id="payment-date" required)
          .form-group
            label(for="status") #{t('admin-payment.status')}
            input(type="text" name="status" id="status" required)
          .btn-group-admin
            .save-btn: button(type="submit") #{t('admin.save')}
            .cancel-btn: button(type="button" onclick="hideCreateForm()") #{t('admin.cancel')}

  script.
    function showCreateForm() {
      document.getElementById('createModal').classList.remove('hidden');
    }
    function hideCreateForm() {
      document.getElementById('createModal').classList.add('hidden');
    }
  <!-- Create Form end -->

  <!-- Edit Form start -->
    #editModal.hidden
      .modal-content-admin
        h3 #{t('admin.edit')}
        form(action="/admin/payments/edit" method="POST")
          .form-group
            label(for="edit-payment-name") #{t('admin-payment.name')}
            input(type="text" name="payment-name" id="edit-payment-name" required)
          .form-group
            label(for="edit-course") #{t('admin-payment.course')}
            input(type="text" name="course" id="edit-course" required)
          .form-group
            label(for="edit-amount") #{t('admin-payment.amount')}
            input(type="text" name="amount" id="edit-amount" required)
          .form-group
            label(for="edit-payment-date") #{t('admin-payment.payment-date')}
            input(type="date" name="payment-date" id="edit-payment-date" required)
          .form-group
            label(for="edit-status") #{t('admin-payment.status')}
            input(type="text" name="status" id="edit-status" required)
          .btn-group-admin
            .save-btn: button(type="submit") #{t('admin.save')}
            .cancel-btn: button(type="button" onclick="hideEditForm()") #{t('admin.cancel')}

  script.
    function showEditForm(id, paymentName, course, amount, paymentDate, status) {
      document.getElementById('edit-payment-name').value = paymentName;
      document.getElementById('edit-course').value = course;
      document.getElementById('edit-amount').value = amount;
      document.getElementById('edit-payment-date').value = paymentDate ;
      document.getElementById('edit-status').value = status;
      document.getElementById('editModal').classList.remove('hidden');
    }

    function hideEditForm() {
      document.getElementById('editModal').classList.add('hidden');
    }
  <!-- Edit Form end -->

  <!-- Delete Form start -->
    #deleteModal.hidden
      .modal-content-admin
        h3 #{t('admin.confirm-delete')}
        p #{t('admin.confirm-delete-payment')}
        .btn-group-admin
          .confirmDelete-btn: button(onclick="confirmDelete()") #{t('admin.confirm-delete')}
          .cancel-btn: button(type="button" onclick="hideDeleteForm()") #{t('admin.cancel')}

  script.
    let paymentIdToDelete = null;  
    function showDeleteForm(paymentId) {
      paymentIdToDelete = paymentId;  
      document.getElementById('deleteModal').classList.remove('hidden');  
    }
    function hideDeleteForm() {
      document.getElementById('deleteModal').classList.add('hidden');  
    }
    function confirmDelete() {
      if (paymentIdToDelete) {
        fetch(/admin/payments/delete/${paymentIdToDelete}, { method: 'DELETE' })
          .then(response => {
            if (response.ok) {
              const row = document.getElementById(paymentRow-${paymentIdToDelete});
              row.remove();
            } else {
              console.error('Failed to delete payment');
            }
          });
      }
      hideDeleteForm();
    }
  <!-- Delete Form end -->
