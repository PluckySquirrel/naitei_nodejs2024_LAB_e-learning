extends ../layout

block content
  include ../partial/adminPanel
  .container-xxl.py-2.mt-4
    .container
      .row.g-4.wow.fadeInUp(data-wow-delay='0.5s')
        h2 #{t('admin-course.management')}
        .admin-container
          .create-btn
            button(onclick="showCreateForm()") #{t('admin.create')}
          center
            table.admin-table
              thead
                tr
                  th #{t('admin-course.#')}
                  th #{t('admin-course.ID')}
                  th #{t('admin-course.name')}
                  th #{t('admin-course.description')}
                  th #{t('admin-course.professor')}
                  th #{t('admin-course.professorId')}
                  th #{t('admin-course.price')}
                  th #{t('admin-course.average_rating')}
                  th #{t('admin.edit')}
                  th #{t('admin.delete')}
              tbody
                each course, index in courses
                  tr(id=`courseRow-${course.id}`)
                    td #{index + 1}
                    td #{course.id}
                    td #{course.name}
                    td #{course.description}
                    td #{course.professorName || 'N/A'}
                    td #{course.professorId}
                    td $#{course.price}
                    td #{course.average_rating || 'N/A'}
                    td 
                      .edit-btn
                        button(onclick=`showEditForm('${course.id}', '${course.name}', '${course.professorId}', '${course.description}', '${course.professorName}', '${course.price}', '${course.average_rating}')`) #{t('admin.edit')}
                    td 
                      .delete-btn
                        button(onclick=`showDeleteForm(${course.id})`) #{t('admin.delete')}

  <!-- Create Form -->
    #createModal.hidden
      .modal-content-admin
        h3 #{t('admin.create')}
        form(action=`/admins/courses/create` method="POST")
          .form-group
            label(for="name") #{t('admin-course.name')}
            input(type="text" name="name" id="name" required)
          .form-group
            label(for="description") #{t('admin-course.description')}
            textarea(name="description" id="description" required)
          .form-group
            label(for="edit-professorId") #{t('admin-course.professorId')}
            input(type="number" name="professorId" id="edit-professorId" required)
          .form-group
            label(for="price") #{t('admin-course.price')}
            input(type="number" name="price" id="price" required)
          .form-group
            label(for="average_rating") #{t('admin-course.average_rating')}
            input(type="number" step="0.1" name="average_rating" id="average_rating" required)
          .btn-group-admin
            .save-btn: button(type="submit") #{t('admin.save')}
            .cancel-btn: button(type="button" onclick="hideCreateForm()") #{t('admin.cancel')}

  script.
    function showCreateForm() {
      document.getElementById('createModal').classList.remove('hidden');
    }
    function hideCreateForm() {
      document.getElementById('createModal').classList.add('hidden');
    }

  <!-- Edit Form -->
    #editModal.hidden
      .modal-content-admin
        h3 #{t('admin.edit')}
        form(action="/admins/courses/edit" method="POST")
          input(type="hidden" name="id" id="edit-id")
          .form-group
            label(for="edit-name") #{t('admin-course.name')}
            input(type="text" name="name" id="edit-name" required)
          .form-group
            label(for="edit-description") #{t('admin-course.description')}
            textarea(name="description" id="edit-description" required)
          .form-group
            label(for="edit-professor") #{t('admin-course.professor')}
            input(type="text" name="professor" id="edit-professor" required)
          .form-group
            label(for="edit-price") #{t('admin-course.price')}
            input(type="number" name="price" id="edit-price" required)
          .form-group
            label(for="edit-average_rating") #{t('admin-course.average_rating')}
            input(type="number" step="0.1" name="average_rating" id="edit-average_rating" required)
          .btn-group-admin
            .save-btn: button(type="submit") #{t('admin.save')}
            .cancel-btn: button(type="button" onclick="hideEditForm()") #{t('admin.cancel')}

  script.
    function showEditForm(id, name, professorId, description, professor, price, rating) {
      if (!id || isNaN(id)) {
        console.error('Invalid course ID:', id);
        return alert('Course ID is invalid.');
      }

      document.getElementById('editModal').classList.remove('hidden');

      document.getElementById('edit-id').value = id;
      document.getElementById('edit-name').value = name || '';
      document.getElementById('edit-description').value = description || '';
      document.getElementById('edit-professor').value = professor || '';
      document.getElementById('edit-professorId').value = professorId || '';
      document.getElementById('edit-price').value = price || 0;
      document.getElementById('edit-average_rating').value = rating || 0;
      }

    function hideEditForm() {
      document.getElementById('editModal').classList.add('hidden');
    }

  <!-- Delete Form -->
  #deleteModal.hidden
    .modal-content-admin
      h3 #{t('admin.confirm-delete')}
      p #{t('admin.confirm-delete-course')}
      .btn-group-admin
        .confirmDelete-btn: button(onclick="confirmDelete()") #{t('admin.confirm-delete')}
        .cancel-btn: button(type="button" onclick="hideDeleteForm()") #{t('admin.cancel')}

  script.
    let courseIdToDelete = null;
    function showDeleteForm(id) {
      courseIdToDelete = id;
      document.getElementById('deleteModal').classList.remove('hidden');
    }
    function hideDeleteForm() {
      document.getElementById('deleteModal').classList.add('hidden');
    }
    function confirmDelete() {
      if (courseIdToDelete) {
        fetch(`/admins/courses/delete/${courseIdToDelete}`, { method: 'DELETE' })
          .then(response => {
            if (response.ok) {
              const row = document.getElementById(`courseRow-${courseIdToDelete}`);
              if (row) row.remove(); 
              hideDeleteForm(); 
            } else {
              console.error('Failed to delete course');
              response.json().then(data => alert(data.message));
          })
          .catch(error => console.error('Error:', error));
      }
    }
